# Generated by Django 4.2.2 on 2023-11-05 00:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Metatypes',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Metatype ID')),
                ('karma', models.IntegerField(default=0, verbose_name='Metatype Karma Cost')),
                ('body', models.IntegerField(default=1, verbose_name='Metatype Body')),
                ('agility', models.IntegerField(default=1, verbose_name='Metatype Agility')),
                ('reaction', models.IntegerField(default=1, verbose_name='Metatype Reaction')),
                ('strength', models.IntegerField(default=1, verbose_name='Metatype Strength')),
                ('willpower', models.IntegerField(default=1, verbose_name='Metatype Willpower')),
                ('logic', models.IntegerField(default=1, verbose_name='Metatype Logic')),
                ('intuition', models.IntegerField(default=1, verbose_name='Metatype Intuition')),
                ('charisma', models.IntegerField(default=1, verbose_name='Metatype Charisma')),
                ('edge', models.IntegerField(default=1, verbose_name='Metatype Edge')),
                ('average_height_m', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, verbose_name='Metatype Average Height (m)')),
                ('average_weight_kg', models.IntegerField(default=1, verbose_name='Metatype Average Weight (kg)')),
            ],
        ),
        migrations.CreateModel(
            name='Qualities',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Quality ID')),
                ('karma', models.IntegerField(default=0, verbose_name='Quality Karma Cost')),
                ('type', models.CharField(default='', max_length=32, verbose_name='Quality Type')),
                ('effect', models.TextField(blank=True, default='', null=True, verbose_name='Quality Game Effect')),
                ('max_level', models.IntegerField(default=1, verbose_name='Quality Maximum Level')),
                ('surge', models.BooleanField(default=False, verbose_name='Quality Surge')),
                ('complex', models.BooleanField(default=False, verbose_name='Quality Complex')),
            ],
        ),
        migrations.CreateModel(
            name='WeaponMod',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Mod Name')),
                ('type', models.CharField(default='ACCESSORY', max_length=32, verbose_name='Mod Type')),
                ('availability', models.IntegerField(default=1, verbose_name='Mod Availability')),
                ('cost', models.IntegerField(default=0, verbose_name='Mod Cost')),
                ('ability', models.TextField(blank=True, default='', null=True)),
                ('wireless', models.TextField(blank=True, default='', null=True)),
                ('rulebook', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Mod Rulebook Reference')),
            ],
        ),
        migrations.CreateModel(
            name='WeaponModSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.CharField(choices=[('Top', 'Top'), ('Under', 'Under'), ('Barrel', 'Barrel')], max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Weapons',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Weapon Name')),
                ('availability', models.IntegerField(default=1, verbose_name='Weapon Availability')),
                ('legal', models.BooleanField(default=True, verbose_name='Weapon Legality Flag')),
                ('cost', models.IntegerField(default=0, verbose_name='Weapon Cost')),
                ('type', models.CharField(max_length=32, verbose_name='Weapon Type')),
                ('dv', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Weapon Damage Value')),
                ('dv_element', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Weapon Damage Value Element')),
                ('weapon_mode', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Weapon Firing Options')),
                ('weapon_ammo', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Weapon Ammo')),
                ('weapon_skill', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='Weapon Skill')),
                ('close', models.IntegerField(null=True)),
                ('near', models.IntegerField(null=True)),
                ('medium', models.IntegerField(null=True)),
                ('far', models.IntegerField(null=True)),
                ('extreme', models.IntegerField(null=True)),
                ('top', models.BooleanField(default=False)),
                ('under', models.BooleanField(default=False)),
                ('barrel', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('wireless', models.TextField(blank=True, default='', null=True)),
                ('note', models.TextField(blank=True, default='', null=True)),
                ('standard_upgrades', models.TextField(blank=True, default='', null=True)),
                ('add_rules', models.TextField(blank=True, default='', null=True)),
                ('rulebook', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Weapon Rulebook Reference')),
            ],
        ),
        migrations.AddConstraint(
            model_name='weapons',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_weapon_name_constraint'),
        ),
        migrations.AddConstraint(
            model_name='weapons',
            constraint=models.CheckConstraint(check=models.Q(('type__isnull', False)), name='not_null_weapon_type_constraint'),
        ),
        migrations.AddConstraint(
            model_name='weapons',
            constraint=models.CheckConstraint(check=models.Q(('availability__gte', 1), ('availability__lte', 9)), name='weapon_availability_gte_1_lte_9'),
        ),
        migrations.AddConstraint(
            model_name='weapons',
            constraint=models.CheckConstraint(check=models.Q(('cost__gte', 0)), name='weapon_cost_gte_0'),
        ),
        migrations.AddField(
            model_name='weaponmodslot',
            name='mod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.weaponmod'),
        ),
        migrations.AddField(
            model_name='weaponmodslot',
            name='weapon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.weapons'),
        ),
        migrations.AddConstraint(
            model_name='weaponmod',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_mod_name_constraint'),
        ),
        migrations.AddConstraint(
            model_name='weaponmod',
            constraint=models.CheckConstraint(check=models.Q(('type__isnull', False)), name='not_null_mod_type_constraint'),
        ),
        migrations.AddConstraint(
            model_name='weaponmod',
            constraint=models.CheckConstraint(check=models.Q(('availability__gte', 1), ('availability__lte', 9)), name='mod_availability_gte_1_lte_9'),
        ),
        migrations.AddConstraint(
            model_name='weaponmod',
            constraint=models.CheckConstraint(check=models.Q(('cost__gte', 0)), name='mod_cost_gte_0'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_1', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_2', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_3', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_4', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_5',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_5', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_6',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_6', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_7',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_7', to='api.qualities'),
        ),
        migrations.AddField(
            model_name='metatypes',
            name='qualities_8',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualities_8', to='api.qualities'),
        ),
    ]
